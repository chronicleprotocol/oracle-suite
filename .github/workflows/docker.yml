name: Publish Docker Image
on:
  workflow_call:
    inputs:
      application:
        description: 'Application Name'
        type: string
        required: true

  workflow_dispatch:
    inputs:
      application:
        description: 'Application Name (lowercase)'
        type: choice
        required: true
        options:
          - gofer
          - spire
          - ghost
          - spectre
      version:
        description: 'New Version (no `v` prefix)'
        type: string
        required: false
        default: ''

jobs:
  build-and-push:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker metadata
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: ghcr.io/chronicleprotocol/${{ inputs.application }}
          tags: |
            type=raw,value=${{ inputs.version }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            APP_NAME=${{ inputs.application }}
            APP_VERSION=${{ inputs.version != '' && inputs.version || steps.meta.outputs.version }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
