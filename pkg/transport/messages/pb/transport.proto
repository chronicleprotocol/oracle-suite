syntax = "proto3";

option go_package = "github.com/chronicleprotocol/oracle-suite/pkg/transport/messages/pb";

message Price {
  // Price:
  string wat = 1; // asset name
  bytes val = 2; // big.Int encoded as bytes
  int64 age = 3; // timestamp

  // Ethereum Signature:
  bytes vrs = 4; // v, r, s combined into one byte array

  // Fields 5, 6 and 7 are not longer used. They must not be used in the future.

  // Additional data:
  bytes trace = 8;
  string version = 9;
}

message DataPointMessage {
  message Signature {
    bytes signer = 1;
    bytes signature = 2;
  }

  string model = 1;
  bytes value = 2;
  bytes signature = 3;
}

message MuSigMetaTickV1 {
  message FeedTick {
    bytes val = 1; // tick value (bn.DecFixedPoint)
    int64 age = 2; // unix timestamp
    bytes vrs = 3; // v, r, s combined into one byte array
  }
  message Optimistic {
    bytes ecdsaSignature = 1; // v, r, s combined into one byte array
    bytes signersBlob = 2; // signers blob
  }
  string wat = 1; // asset name
  bytes val = 2; // median value (bn.DecFixedPoint)
  int64 age = 3; // unix timestamp
  optional Optimistic optimistic = 4; // optional data for optimistic poke
  repeated FeedTick ticks = 5;
}

message MuSigMeta {
  oneof msgMeta {
    MuSigMetaTickV1 ticks = 1;
  }
}

message MuSigInitializeMessage {
  bytes sessionID = 1;
  int64 startedAtTimestamp = 2;
  string msgType = 3;
  bytes msgBody = 4;
  optional MuSigMeta msgMeta = 5;
  repeated bytes signers = 6;
}

message MuSigTerminateMessage {
  bytes sessionID = 1;
  string reason = 2;
}

message MuSigCommitmentMessage {
  bytes sessionID = 1;
  bytes pubKeyX = 2;
  bytes pubKeyY = 3;
  bytes commitmentKeyX = 4;
  bytes commitmentKeyY = 5;
}

message MuSigPartialSignatureMessage {
  bytes sessionID = 1;
  bytes partialSignature = 2;
}

message MuSigSignatureMessage {
  bytes sessionID = 1;
  int64 computedAtTimestamp = 2;
  string msgType = 3;
  bytes msgBody = 4;
  optional MuSigMeta msgMeta = 5;
  repeated bytes signers = 6;
  bytes commitment = 7;
  bytes schnorrSignature = 8;
}

message MuSigOptimisticSignatureMessage {
  MuSigSignatureMessage signature = 1;
  bytes ecdsaSignature = 2;
}

message Greet {
  bytes signature = 1;
  bytes pubKeyX = 2;
  bytes pubKeyY = 3;
}
