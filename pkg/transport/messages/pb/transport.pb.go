// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: transport.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Price:
	Wat string `protobuf:"bytes,1,opt,name=wat,proto3" json:"wat,omitempty"`  // asset name
	Val []byte `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`  // big.Int encoded as bytes
	Age int64  `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"` // timestamp
	// Ethereum Signature:
	Vrs []byte `protobuf:"bytes,4,opt,name=vrs,proto3" json:"vrs,omitempty"` // v, r, s combined into one byte array
	// Additional data:
	Trace   []byte `protobuf:"bytes,8,opt,name=trace,proto3" json:"trace,omitempty"`
	Version string `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{0}
}

func (x *Price) GetWat() string {
	if x != nil {
		return x.Wat
	}
	return ""
}

func (x *Price) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

func (x *Price) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Price) GetVrs() []byte {
	if x != nil {
		return x.Vrs
	}
	return nil
}

func (x *Price) GetTrace() []byte {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *Price) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type DataPointMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model     string `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Value     []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *DataPointMessage) Reset() {
	*x = DataPointMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPointMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPointMessage) ProtoMessage() {}

func (x *DataPointMessage) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPointMessage.ProtoReflect.Descriptor instead.
func (*DataPointMessage) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{1}
}

func (x *DataPointMessage) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *DataPointMessage) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *DataPointMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type MuSigMetaTickV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wat        string                      `protobuf:"bytes,1,opt,name=wat,proto3" json:"wat,omitempty"`                     // asset name
	Val        []byte                      `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`                     // median value (bn.DecFixedPoint)
	Age        int64                       `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`                    // unix timestamp
	Optimistic *MuSigMetaTickV1_Optimistic `protobuf:"bytes,4,opt,name=optimistic,proto3,oneof" json:"optimistic,omitempty"` // optional data for optimistic poke
	Ticks      []*MuSigMetaTickV1_FeedTick `protobuf:"bytes,5,rep,name=ticks,proto3" json:"ticks,omitempty"`
}

func (x *MuSigMetaTickV1) Reset() {
	*x = MuSigMetaTickV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigMetaTickV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigMetaTickV1) ProtoMessage() {}

func (x *MuSigMetaTickV1) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigMetaTickV1.ProtoReflect.Descriptor instead.
func (*MuSigMetaTickV1) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{2}
}

func (x *MuSigMetaTickV1) GetWat() string {
	if x != nil {
		return x.Wat
	}
	return ""
}

func (x *MuSigMetaTickV1) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

func (x *MuSigMetaTickV1) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *MuSigMetaTickV1) GetOptimistic() *MuSigMetaTickV1_Optimistic {
	if x != nil {
		return x.Optimistic
	}
	return nil
}

func (x *MuSigMetaTickV1) GetTicks() []*MuSigMetaTickV1_FeedTick {
	if x != nil {
		return x.Ticks
	}
	return nil
}

type MuSigMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MsgMeta:
	//	*MuSigMeta_Ticks
	MsgMeta isMuSigMeta_MsgMeta `protobuf_oneof:"msgMeta"`
}

func (x *MuSigMeta) Reset() {
	*x = MuSigMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigMeta) ProtoMessage() {}

func (x *MuSigMeta) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigMeta.ProtoReflect.Descriptor instead.
func (*MuSigMeta) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{3}
}

func (m *MuSigMeta) GetMsgMeta() isMuSigMeta_MsgMeta {
	if m != nil {
		return m.MsgMeta
	}
	return nil
}

func (x *MuSigMeta) GetTicks() *MuSigMetaTickV1 {
	if x, ok := x.GetMsgMeta().(*MuSigMeta_Ticks); ok {
		return x.Ticks
	}
	return nil
}

type isMuSigMeta_MsgMeta interface {
	isMuSigMeta_MsgMeta()
}

type MuSigMeta_Ticks struct {
	Ticks *MuSigMetaTickV1 `protobuf:"bytes,1,opt,name=ticks,proto3,oneof"`
}

func (*MuSigMeta_Ticks) isMuSigMeta_MsgMeta() {}

type MuSigInitializeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID          []byte     `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	StartedAtTimestamp int64      `protobuf:"varint,2,opt,name=startedAtTimestamp,proto3" json:"startedAtTimestamp,omitempty"`
	MsgType            string     `protobuf:"bytes,3,opt,name=msgType,proto3" json:"msgType,omitempty"`
	MsgBody            []byte     `protobuf:"bytes,4,opt,name=msgBody,proto3" json:"msgBody,omitempty"`
	MsgMeta            *MuSigMeta `protobuf:"bytes,5,opt,name=msgMeta,proto3,oneof" json:"msgMeta,omitempty"`
	Signers            [][]byte   `protobuf:"bytes,6,rep,name=signers,proto3" json:"signers,omitempty"`
}

func (x *MuSigInitializeMessage) Reset() {
	*x = MuSigInitializeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigInitializeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigInitializeMessage) ProtoMessage() {}

func (x *MuSigInitializeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigInitializeMessage.ProtoReflect.Descriptor instead.
func (*MuSigInitializeMessage) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{4}
}

func (x *MuSigInitializeMessage) GetSessionID() []byte {
	if x != nil {
		return x.SessionID
	}
	return nil
}

func (x *MuSigInitializeMessage) GetStartedAtTimestamp() int64 {
	if x != nil {
		return x.StartedAtTimestamp
	}
	return 0
}

func (x *MuSigInitializeMessage) GetMsgType() string {
	if x != nil {
		return x.MsgType
	}
	return ""
}

func (x *MuSigInitializeMessage) GetMsgBody() []byte {
	if x != nil {
		return x.MsgBody
	}
	return nil
}

func (x *MuSigInitializeMessage) GetMsgMeta() *MuSigMeta {
	if x != nil {
		return x.MsgMeta
	}
	return nil
}

func (x *MuSigInitializeMessage) GetSigners() [][]byte {
	if x != nil {
		return x.Signers
	}
	return nil
}

type MuSigTerminateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID []byte `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Reason    string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *MuSigTerminateMessage) Reset() {
	*x = MuSigTerminateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigTerminateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigTerminateMessage) ProtoMessage() {}

func (x *MuSigTerminateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigTerminateMessage.ProtoReflect.Descriptor instead.
func (*MuSigTerminateMessage) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{5}
}

func (x *MuSigTerminateMessage) GetSessionID() []byte {
	if x != nil {
		return x.SessionID
	}
	return nil
}

func (x *MuSigTerminateMessage) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type MuSigCommitmentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID      []byte `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	PubKeyX        []byte `protobuf:"bytes,2,opt,name=pubKeyX,proto3" json:"pubKeyX,omitempty"`
	PubKeyY        []byte `protobuf:"bytes,3,opt,name=pubKeyY,proto3" json:"pubKeyY,omitempty"`
	CommitmentKeyX []byte `protobuf:"bytes,4,opt,name=commitmentKeyX,proto3" json:"commitmentKeyX,omitempty"`
	CommitmentKeyY []byte `protobuf:"bytes,5,opt,name=commitmentKeyY,proto3" json:"commitmentKeyY,omitempty"`
}

func (x *MuSigCommitmentMessage) Reset() {
	*x = MuSigCommitmentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigCommitmentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigCommitmentMessage) ProtoMessage() {}

func (x *MuSigCommitmentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigCommitmentMessage.ProtoReflect.Descriptor instead.
func (*MuSigCommitmentMessage) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{6}
}

func (x *MuSigCommitmentMessage) GetSessionID() []byte {
	if x != nil {
		return x.SessionID
	}
	return nil
}

func (x *MuSigCommitmentMessage) GetPubKeyX() []byte {
	if x != nil {
		return x.PubKeyX
	}
	return nil
}

func (x *MuSigCommitmentMessage) GetPubKeyY() []byte {
	if x != nil {
		return x.PubKeyY
	}
	return nil
}

func (x *MuSigCommitmentMessage) GetCommitmentKeyX() []byte {
	if x != nil {
		return x.CommitmentKeyX
	}
	return nil
}

func (x *MuSigCommitmentMessage) GetCommitmentKeyY() []byte {
	if x != nil {
		return x.CommitmentKeyY
	}
	return nil
}

type MuSigPartialSignatureMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID        []byte `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	PartialSignature []byte `protobuf:"bytes,2,opt,name=partialSignature,proto3" json:"partialSignature,omitempty"`
}

func (x *MuSigPartialSignatureMessage) Reset() {
	*x = MuSigPartialSignatureMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigPartialSignatureMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigPartialSignatureMessage) ProtoMessage() {}

func (x *MuSigPartialSignatureMessage) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigPartialSignatureMessage.ProtoReflect.Descriptor instead.
func (*MuSigPartialSignatureMessage) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{7}
}

func (x *MuSigPartialSignatureMessage) GetSessionID() []byte {
	if x != nil {
		return x.SessionID
	}
	return nil
}

func (x *MuSigPartialSignatureMessage) GetPartialSignature() []byte {
	if x != nil {
		return x.PartialSignature
	}
	return nil
}

type MuSigSignatureMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID           []byte     `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ComputedAtTimestamp int64      `protobuf:"varint,2,opt,name=computedAtTimestamp,proto3" json:"computedAtTimestamp,omitempty"`
	MsgType             string     `protobuf:"bytes,3,opt,name=msgType,proto3" json:"msgType,omitempty"`
	MsgBody             []byte     `protobuf:"bytes,4,opt,name=msgBody,proto3" json:"msgBody,omitempty"`
	MsgMeta             *MuSigMeta `protobuf:"bytes,5,opt,name=msgMeta,proto3,oneof" json:"msgMeta,omitempty"`
	Signers             [][]byte   `protobuf:"bytes,6,rep,name=signers,proto3" json:"signers,omitempty"`
	Commitment          []byte     `protobuf:"bytes,7,opt,name=commitment,proto3" json:"commitment,omitempty"`
	SchnorrSignature    []byte     `protobuf:"bytes,8,opt,name=schnorrSignature,proto3" json:"schnorrSignature,omitempty"`
}

func (x *MuSigSignatureMessage) Reset() {
	*x = MuSigSignatureMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigSignatureMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigSignatureMessage) ProtoMessage() {}

func (x *MuSigSignatureMessage) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigSignatureMessage.ProtoReflect.Descriptor instead.
func (*MuSigSignatureMessage) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{8}
}

func (x *MuSigSignatureMessage) GetSessionID() []byte {
	if x != nil {
		return x.SessionID
	}
	return nil
}

func (x *MuSigSignatureMessage) GetComputedAtTimestamp() int64 {
	if x != nil {
		return x.ComputedAtTimestamp
	}
	return 0
}

func (x *MuSigSignatureMessage) GetMsgType() string {
	if x != nil {
		return x.MsgType
	}
	return ""
}

func (x *MuSigSignatureMessage) GetMsgBody() []byte {
	if x != nil {
		return x.MsgBody
	}
	return nil
}

func (x *MuSigSignatureMessage) GetMsgMeta() *MuSigMeta {
	if x != nil {
		return x.MsgMeta
	}
	return nil
}

func (x *MuSigSignatureMessage) GetSigners() [][]byte {
	if x != nil {
		return x.Signers
	}
	return nil
}

func (x *MuSigSignatureMessage) GetCommitment() []byte {
	if x != nil {
		return x.Commitment
	}
	return nil
}

func (x *MuSigSignatureMessage) GetSchnorrSignature() []byte {
	if x != nil {
		return x.SchnorrSignature
	}
	return nil
}

type Greet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	PubKeyX   []byte `protobuf:"bytes,2,opt,name=pubKeyX,proto3" json:"pubKeyX,omitempty"`
	PubKeyY   []byte `protobuf:"bytes,3,opt,name=pubKeyY,proto3" json:"pubKeyY,omitempty"`
}

func (x *Greet) Reset() {
	*x = Greet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Greet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Greet) ProtoMessage() {}

func (x *Greet) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Greet.ProtoReflect.Descriptor instead.
func (*Greet) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{9}
}

func (x *Greet) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Greet) GetPubKeyX() []byte {
	if x != nil {
		return x.PubKeyX
	}
	return nil
}

func (x *Greet) GetPubKeyY() []byte {
	if x != nil {
		return x.PubKeyY
	}
	return nil
}

type DataPointMessage_Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signer    []byte `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *DataPointMessage_Signature) Reset() {
	*x = DataPointMessage_Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPointMessage_Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPointMessage_Signature) ProtoMessage() {}

func (x *DataPointMessage_Signature) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPointMessage_Signature.ProtoReflect.Descriptor instead.
func (*DataPointMessage_Signature) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{1, 0}
}

func (x *DataPointMessage_Signature) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *DataPointMessage_Signature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type MuSigMetaTickV1_FeedTick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val []byte `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`  // tick value (bn.DecFixedPoint)
	Age int64  `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"` // unix timestamp
	Vrs []byte `protobuf:"bytes,3,opt,name=vrs,proto3" json:"vrs,omitempty"`  // v, r, s combined into one byte array
}

func (x *MuSigMetaTickV1_FeedTick) Reset() {
	*x = MuSigMetaTickV1_FeedTick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigMetaTickV1_FeedTick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigMetaTickV1_FeedTick) ProtoMessage() {}

func (x *MuSigMetaTickV1_FeedTick) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigMetaTickV1_FeedTick.ProtoReflect.Descriptor instead.
func (*MuSigMetaTickV1_FeedTick) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{2, 0}
}

func (x *MuSigMetaTickV1_FeedTick) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

func (x *MuSigMetaTickV1_FeedTick) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *MuSigMetaTickV1_FeedTick) GetVrs() []byte {
	if x != nil {
		return x.Vrs
	}
	return nil
}

type MuSigMetaTickV1_Optimistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EcdsaSignature []byte `protobuf:"bytes,1,opt,name=ecdsaSignature,proto3" json:"ecdsaSignature,omitempty"` // v, r, s combined into one byte array
	SignersBlob    []byte `protobuf:"bytes,2,opt,name=signersBlob,proto3" json:"signersBlob,omitempty"`       // signers blob
}

func (x *MuSigMetaTickV1_Optimistic) Reset() {
	*x = MuSigMetaTickV1_Optimistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigMetaTickV1_Optimistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigMetaTickV1_Optimistic) ProtoMessage() {}

func (x *MuSigMetaTickV1_Optimistic) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigMetaTickV1_Optimistic.ProtoReflect.Descriptor instead.
func (*MuSigMetaTickV1_Optimistic) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{2, 1}
}

func (x *MuSigMetaTickV1_Optimistic) GetEcdsaSignature() []byte {
	if x != nil {
		return x.EcdsaSignature
	}
	return nil
}

func (x *MuSigMetaTickV1_Optimistic) GetSignersBlob() []byte {
	if x != nil {
		return x.SignersBlob
	}
	return nil
}

var File_transport_proto protoreflect.FileDescriptor

var file_transport_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x7f, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x77, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x76, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x76,
	0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x1a, 0x41, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0xe3, 0x02, 0x0a, 0x0f, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x4d, 0x65,
	0x74, 0x61, 0x54, 0x69, 0x63, 0x6b, 0x56, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x77, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x40,
	0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x69,
	0x63, 0x6b, 0x56, 0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x74, 0x69, 0x63, 0x48,
	0x00, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x74, 0x69, 0x63, 0x88, 0x01, 0x01,
	0x12, 0x2f, 0x0a, 0x05, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x69, 0x63, 0x6b, 0x56,
	0x31, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x05, 0x74, 0x69, 0x63, 0x6b,
	0x73, 0x1a, 0x40, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x10, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x76, 0x72, 0x73, 0x1a, 0x56, 0x0a, 0x0a, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x63, 0x64, 0x73, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x65, 0x63, 0x64, 0x73, 0x61,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x73, 0x42, 0x6c, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x42, 0x6c, 0x6f, 0x62, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x74, 0x69, 0x63, 0x22, 0x40, 0x0a, 0x09, 0x4d, 0x75,
	0x53, 0x69, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x05, 0x74, 0x69, 0x63, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x4d, 0x65,
	0x74, 0x61, 0x54, 0x69, 0x63, 0x6b, 0x56, 0x31, 0x48, 0x00, 0x52, 0x05, 0x74, 0x69, 0x63, 0x6b,
	0x73, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x22, 0xeb, 0x01, 0x0a,
	0x16, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x6d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x73, 0x67,
	0x4d, 0x65, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x75, 0x53,
	0x69, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x4d, 0x65, 0x74,
	0x61, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x6d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x15, 0x4d, 0x75,
	0x53, 0x69, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xba, 0x01, 0x0a, 0x16, 0x4d, 0x75,
	0x53, 0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x58, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x58, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x59, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x59, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x58, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x58, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x59,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x4b, 0x65, 0x79, 0x59, 0x22, 0x68, 0x0a, 0x1c, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x22, 0xb8, 0x02, 0x0a, 0x15, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x64, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x29,
	0x0a, 0x07, 0x6d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73,
	0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x59, 0x0a, 0x05, 0x47,
	0x72, 0x65, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x58, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x58, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x59, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x59, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x6c, 0x65, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2d, 0x73, 0x75,
	0x69, 0x74, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transport_proto_rawDescOnce sync.Once
	file_transport_proto_rawDescData = file_transport_proto_rawDesc
)

func file_transport_proto_rawDescGZIP() []byte {
	file_transport_proto_rawDescOnce.Do(func() {
		file_transport_proto_rawDescData = protoimpl.X.CompressGZIP(file_transport_proto_rawDescData)
	})
	return file_transport_proto_rawDescData
}

var file_transport_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_transport_proto_goTypes = []interface{}{
	(*Price)(nil),                        // 0: Price
	(*DataPointMessage)(nil),             // 1: DataPointMessage
	(*MuSigMetaTickV1)(nil),              // 2: MuSigMetaTickV1
	(*MuSigMeta)(nil),                    // 3: MuSigMeta
	(*MuSigInitializeMessage)(nil),       // 4: MuSigInitializeMessage
	(*MuSigTerminateMessage)(nil),        // 5: MuSigTerminateMessage
	(*MuSigCommitmentMessage)(nil),       // 6: MuSigCommitmentMessage
	(*MuSigPartialSignatureMessage)(nil), // 7: MuSigPartialSignatureMessage
	(*MuSigSignatureMessage)(nil),        // 8: MuSigSignatureMessage
	(*Greet)(nil),                        // 9: Greet
	(*DataPointMessage_Signature)(nil),   // 10: DataPointMessage.Signature
	(*MuSigMetaTickV1_FeedTick)(nil),     // 11: MuSigMetaTickV1.FeedTick
	(*MuSigMetaTickV1_Optimistic)(nil),   // 12: MuSigMetaTickV1.Optimistic
}
var file_transport_proto_depIdxs = []int32{
	12, // 0: MuSigMetaTickV1.optimistic:type_name -> MuSigMetaTickV1.Optimistic
	11, // 1: MuSigMetaTickV1.ticks:type_name -> MuSigMetaTickV1.FeedTick
	2,  // 2: MuSigMeta.ticks:type_name -> MuSigMetaTickV1
	3,  // 3: MuSigInitializeMessage.msgMeta:type_name -> MuSigMeta
	3,  // 4: MuSigSignatureMessage.msgMeta:type_name -> MuSigMeta
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_transport_proto_init() }
func file_transport_proto_init() {
	if File_transport_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transport_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPointMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigMetaTickV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigInitializeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigTerminateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigCommitmentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigPartialSignatureMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigSignatureMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Greet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPointMessage_Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigMetaTickV1_FeedTick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigMetaTickV1_Optimistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_transport_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_transport_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*MuSigMeta_Ticks)(nil),
	}
	file_transport_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_transport_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transport_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transport_proto_goTypes,
		DependencyIndexes: file_transport_proto_depIdxs,
		MessageInfos:      file_transport_proto_msgTypes,
	}.Build()
	File_transport_proto = out.File
	file_transport_proto_rawDesc = nil
	file_transport_proto_goTypes = nil
	file_transport_proto_depIdxs = nil
}
