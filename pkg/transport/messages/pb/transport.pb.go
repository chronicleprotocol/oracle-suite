// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: transport.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *AppInfo) Reset() {
	*x = AppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfo) ProtoMessage() {}

func (x *AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfo.ProtoReflect.Descriptor instead.
func (*AppInfo) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{0}
}

func (x *AppInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Price:
	Wat string `protobuf:"bytes,1,opt,name=wat,proto3" json:"wat,omitempty"`  // asset name
	Val []byte `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`  // big.Int encoded as bytes
	Age int64  `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"` // timestamp
	// Ethereum Signature:
	Vrs []byte `protobuf:"bytes,4,opt,name=vrs,proto3" json:"vrs,omitempty"` // v, r, s combined into one byte array
	// Additional data:
	Trace   []byte `protobuf:"bytes,8,opt,name=trace,proto3" json:"trace,omitempty"`
	Version string `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{1}
}

func (x *Price) GetWat() string {
	if x != nil {
		return x.Wat
	}
	return ""
}

func (x *Price) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

func (x *Price) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Price) GetVrs() []byte {
	if x != nil {
		return x.Vrs
	}
	return nil
}

func (x *Price) GetTrace() []byte {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *Price) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type DataPointValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*DataPointValue_Static
	//	*DataPointValue_Tick
	Value isDataPointValue_Value `protobuf_oneof:"value"`
}

func (x *DataPointValue) Reset() {
	*x = DataPointValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPointValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPointValue) ProtoMessage() {}

func (x *DataPointValue) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPointValue.ProtoReflect.Descriptor instead.
func (*DataPointValue) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{2}
}

func (m *DataPointValue) GetValue() isDataPointValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *DataPointValue) GetStatic() []byte {
	if x, ok := x.GetValue().(*DataPointValue_Static); ok {
		return x.Static
	}
	return nil
}

func (x *DataPointValue) GetTick() *DataPointTickValue {
	if x, ok := x.GetValue().(*DataPointValue_Tick); ok {
		return x.Tick
	}
	return nil
}

type isDataPointValue_Value interface {
	isDataPointValue_Value()
}

type DataPointValue_Static struct {
	Static []byte `protobuf:"bytes,1,opt,name=static,proto3,oneof"`
}

type DataPointValue_Tick struct {
	Tick *DataPointTickValue `protobuf:"bytes,2,opt,name=tick,proto3,oneof"`
}

func (*DataPointValue_Static) isDataPointValue_Value() {}

func (*DataPointValue_Tick) isDataPointValue_Value() {}

type DataPointTickValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair      string `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`           // Pair name, e.g. "ETH/USD".
	Price     []byte `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`         // Price value (bn.DecFixedPoint).
	Volume24H []byte `protobuf:"bytes,3,opt,name=volume24h,proto3" json:"volume24h,omitempty"` // Volume in last 24 hours (bn.DecFixedPoint).
}

func (x *DataPointTickValue) Reset() {
	*x = DataPointTickValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPointTickValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPointTickValue) ProtoMessage() {}

func (x *DataPointTickValue) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPointTickValue.ProtoReflect.Descriptor instead.
func (*DataPointTickValue) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{3}
}

func (x *DataPointTickValue) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *DataPointTickValue) GetPrice() []byte {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *DataPointTickValue) GetVolume24H() []byte {
	if x != nil {
		return x.Volume24H
	}
	return nil
}

type DataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     *DataPointValue   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`                                                                                       // Data point value.
	Timestamp int64             `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                              // Timestamp of the data point.
	SubPoints []*DataPoint      `protobuf:"bytes,3,rep,name=subPoints,proto3" json:"subPoints,omitempty"`                                                                               // Sub data points.
	Meta      map[string][]byte `protobuf:"bytes,4,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Additional meta data.
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoint.ProtoReflect.Descriptor instead.
func (*DataPoint) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{4}
}

func (x *DataPoint) GetValue() *DataPointValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *DataPoint) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DataPoint) GetSubPoints() []*DataPoint {
	if x != nil {
		return x.SubPoints
	}
	return nil
}

func (x *DataPoint) GetMeta() map[string][]byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

type DataPointMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model          string     `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`                   // Model name that produced the data point.
	EcdsaSignature []byte     `protobuf:"bytes,3,opt,name=ecdsaSignature,proto3" json:"ecdsaSignature,omitempty"` // Feed signature (types.Signature).
	DataPoint      *DataPoint `protobuf:"bytes,2,opt,name=dataPoint,proto3" json:"dataPoint,omitempty"`           // Data point.
	AppInfo        *AppInfo   `protobuf:"bytes,1000,opt,name=appInfo,proto3" json:"appInfo,omitempty"`            // Application info.
}

func (x *DataPointMessage) Reset() {
	*x = DataPointMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPointMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPointMessage) ProtoMessage() {}

func (x *DataPointMessage) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPointMessage.ProtoReflect.Descriptor instead.
func (*DataPointMessage) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{5}
}

func (x *DataPointMessage) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *DataPointMessage) GetEcdsaSignature() []byte {
	if x != nil {
		return x.EcdsaSignature
	}
	return nil
}

func (x *DataPointMessage) GetDataPoint() *DataPoint {
	if x != nil {
		return x.DataPoint
	}
	return nil
}

func (x *DataPointMessage) GetAppInfo() *AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type MuSigMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MsgMeta:
	//	*MuSigMeta_Ticks
	MsgMeta isMuSigMeta_MsgMeta `protobuf_oneof:"msgMeta"`
}

func (x *MuSigMeta) Reset() {
	*x = MuSigMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigMeta) ProtoMessage() {}

func (x *MuSigMeta) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigMeta.ProtoReflect.Descriptor instead.
func (*MuSigMeta) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{6}
}

func (m *MuSigMeta) GetMsgMeta() isMuSigMeta_MsgMeta {
	if m != nil {
		return m.MsgMeta
	}
	return nil
}

func (x *MuSigMeta) GetTicks() *MuSigMetaTickV1 {
	if x, ok := x.GetMsgMeta().(*MuSigMeta_Ticks); ok {
		return x.Ticks
	}
	return nil
}

type isMuSigMeta_MsgMeta interface {
	isMuSigMeta_MsgMeta()
}

type MuSigMeta_Ticks struct {
	Ticks *MuSigMetaTickV1 `protobuf:"bytes,1,opt,name=ticks,proto3,oneof"`
}

func (*MuSigMeta_Ticks) isMuSigMeta_MsgMeta() {}

type MuSigMetaTickV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wat       string                      `protobuf:"bytes,1,opt,name=wat,proto3" json:"wat,omitempty"`                   // Asset name (e.g. "ETH/USD").
	Val       []byte                      `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`                   // Median value of all ticks (bn.DecFixedPoint).
	Age       int64                       `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`                  // Unix timestamp of the oldest tick.
	EcdsaData []byte                      `protobuf:"bytes,4,opt,name=ecdsaData,proto3,oneof" json:"ecdsaData,omitempty"` // Optional ECDSA signature data required for the optimistic poke.
	Ticks     []*MuSigMetaTickV1_FeedTick `protobuf:"bytes,5,rep,name=ticks,proto3" json:"ticks,omitempty"`               // Ticks used to calculate median along with feed signatures.
}

func (x *MuSigMetaTickV1) Reset() {
	*x = MuSigMetaTickV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigMetaTickV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigMetaTickV1) ProtoMessage() {}

func (x *MuSigMetaTickV1) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigMetaTickV1.ProtoReflect.Descriptor instead.
func (*MuSigMetaTickV1) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{7}
}

func (x *MuSigMetaTickV1) GetWat() string {
	if x != nil {
		return x.Wat
	}
	return ""
}

func (x *MuSigMetaTickV1) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

func (x *MuSigMetaTickV1) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *MuSigMetaTickV1) GetEcdsaData() []byte {
	if x != nil {
		return x.EcdsaData
	}
	return nil
}

func (x *MuSigMetaTickV1) GetTicks() []*MuSigMetaTickV1_FeedTick {
	if x != nil {
		return x.Ticks
	}
	return nil
}

type MuSigInitializeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID          []byte     `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	StartedAtTimestamp int64      `protobuf:"varint,2,opt,name=startedAtTimestamp,proto3" json:"startedAtTimestamp,omitempty"`
	MsgType            string     `protobuf:"bytes,3,opt,name=msgType,proto3" json:"msgType,omitempty"`
	MsgBody            []byte     `protobuf:"bytes,4,opt,name=msgBody,proto3" json:"msgBody,omitempty"`
	MsgMeta            *MuSigMeta `protobuf:"bytes,5,opt,name=msgMeta,proto3,oneof" json:"msgMeta,omitempty"`
	Signers            [][]byte   `protobuf:"bytes,6,rep,name=signers,proto3" json:"signers,omitempty"`
	AppInfo            *AppInfo   `protobuf:"bytes,1000,opt,name=appInfo,proto3" json:"appInfo,omitempty"` // Application info.
}

func (x *MuSigInitializeMessage) Reset() {
	*x = MuSigInitializeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigInitializeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigInitializeMessage) ProtoMessage() {}

func (x *MuSigInitializeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigInitializeMessage.ProtoReflect.Descriptor instead.
func (*MuSigInitializeMessage) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{8}
}

func (x *MuSigInitializeMessage) GetSessionID() []byte {
	if x != nil {
		return x.SessionID
	}
	return nil
}

func (x *MuSigInitializeMessage) GetStartedAtTimestamp() int64 {
	if x != nil {
		return x.StartedAtTimestamp
	}
	return 0
}

func (x *MuSigInitializeMessage) GetMsgType() string {
	if x != nil {
		return x.MsgType
	}
	return ""
}

func (x *MuSigInitializeMessage) GetMsgBody() []byte {
	if x != nil {
		return x.MsgBody
	}
	return nil
}

func (x *MuSigInitializeMessage) GetMsgMeta() *MuSigMeta {
	if x != nil {
		return x.MsgMeta
	}
	return nil
}

func (x *MuSigInitializeMessage) GetSigners() [][]byte {
	if x != nil {
		return x.Signers
	}
	return nil
}

func (x *MuSigInitializeMessage) GetAppInfo() *AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type MuSigTerminateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID []byte   `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Reason    string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	AppInfo   *AppInfo `protobuf:"bytes,1000,opt,name=appInfo,proto3" json:"appInfo,omitempty"` // Application info.
}

func (x *MuSigTerminateMessage) Reset() {
	*x = MuSigTerminateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigTerminateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigTerminateMessage) ProtoMessage() {}

func (x *MuSigTerminateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigTerminateMessage.ProtoReflect.Descriptor instead.
func (*MuSigTerminateMessage) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{9}
}

func (x *MuSigTerminateMessage) GetSessionID() []byte {
	if x != nil {
		return x.SessionID
	}
	return nil
}

func (x *MuSigTerminateMessage) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *MuSigTerminateMessage) GetAppInfo() *AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type MuSigCommitmentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID      []byte   `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	PubKeyX        []byte   `protobuf:"bytes,2,opt,name=pubKeyX,proto3" json:"pubKeyX,omitempty"`
	PubKeyY        []byte   `protobuf:"bytes,3,opt,name=pubKeyY,proto3" json:"pubKeyY,omitempty"`
	CommitmentKeyX []byte   `protobuf:"bytes,4,opt,name=commitmentKeyX,proto3" json:"commitmentKeyX,omitempty"`
	CommitmentKeyY []byte   `protobuf:"bytes,5,opt,name=commitmentKeyY,proto3" json:"commitmentKeyY,omitempty"`
	AppInfo        *AppInfo `protobuf:"bytes,1000,opt,name=appInfo,proto3" json:"appInfo,omitempty"` // Application info.
}

func (x *MuSigCommitmentMessage) Reset() {
	*x = MuSigCommitmentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigCommitmentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigCommitmentMessage) ProtoMessage() {}

func (x *MuSigCommitmentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigCommitmentMessage.ProtoReflect.Descriptor instead.
func (*MuSigCommitmentMessage) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{10}
}

func (x *MuSigCommitmentMessage) GetSessionID() []byte {
	if x != nil {
		return x.SessionID
	}
	return nil
}

func (x *MuSigCommitmentMessage) GetPubKeyX() []byte {
	if x != nil {
		return x.PubKeyX
	}
	return nil
}

func (x *MuSigCommitmentMessage) GetPubKeyY() []byte {
	if x != nil {
		return x.PubKeyY
	}
	return nil
}

func (x *MuSigCommitmentMessage) GetCommitmentKeyX() []byte {
	if x != nil {
		return x.CommitmentKeyX
	}
	return nil
}

func (x *MuSigCommitmentMessage) GetCommitmentKeyY() []byte {
	if x != nil {
		return x.CommitmentKeyY
	}
	return nil
}

func (x *MuSigCommitmentMessage) GetAppInfo() *AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type MuSigPartialSignatureMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID        []byte   `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	PartialSignature []byte   `protobuf:"bytes,2,opt,name=partialSignature,proto3" json:"partialSignature,omitempty"`
	AppInfo          *AppInfo `protobuf:"bytes,1000,opt,name=appInfo,proto3" json:"appInfo,omitempty"` // Application info.
}

func (x *MuSigPartialSignatureMessage) Reset() {
	*x = MuSigPartialSignatureMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigPartialSignatureMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigPartialSignatureMessage) ProtoMessage() {}

func (x *MuSigPartialSignatureMessage) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigPartialSignatureMessage.ProtoReflect.Descriptor instead.
func (*MuSigPartialSignatureMessage) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{11}
}

func (x *MuSigPartialSignatureMessage) GetSessionID() []byte {
	if x != nil {
		return x.SessionID
	}
	return nil
}

func (x *MuSigPartialSignatureMessage) GetPartialSignature() []byte {
	if x != nil {
		return x.PartialSignature
	}
	return nil
}

func (x *MuSigPartialSignatureMessage) GetAppInfo() *AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type MuSigSignatureMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID           []byte     `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ComputedAtTimestamp int64      `protobuf:"varint,2,opt,name=computedAtTimestamp,proto3" json:"computedAtTimestamp,omitempty"`
	MsgType             string     `protobuf:"bytes,3,opt,name=msgType,proto3" json:"msgType,omitempty"`
	MsgBody             []byte     `protobuf:"bytes,4,opt,name=msgBody,proto3" json:"msgBody,omitempty"`
	MsgMeta             *MuSigMeta `protobuf:"bytes,5,opt,name=msgMeta,proto3,oneof" json:"msgMeta,omitempty"`
	Signers             [][]byte   `protobuf:"bytes,6,rep,name=signers,proto3" json:"signers,omitempty"`
	Commitment          []byte     `protobuf:"bytes,7,opt,name=commitment,proto3" json:"commitment,omitempty"`
	SchnorrSignature    []byte     `protobuf:"bytes,8,opt,name=schnorrSignature,proto3" json:"schnorrSignature,omitempty"`
	AppInfo             *AppInfo   `protobuf:"bytes,1000,opt,name=appInfo,proto3" json:"appInfo,omitempty"` // Application info.
}

func (x *MuSigSignatureMessage) Reset() {
	*x = MuSigSignatureMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigSignatureMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigSignatureMessage) ProtoMessage() {}

func (x *MuSigSignatureMessage) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigSignatureMessage.ProtoReflect.Descriptor instead.
func (*MuSigSignatureMessage) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{12}
}

func (x *MuSigSignatureMessage) GetSessionID() []byte {
	if x != nil {
		return x.SessionID
	}
	return nil
}

func (x *MuSigSignatureMessage) GetComputedAtTimestamp() int64 {
	if x != nil {
		return x.ComputedAtTimestamp
	}
	return 0
}

func (x *MuSigSignatureMessage) GetMsgType() string {
	if x != nil {
		return x.MsgType
	}
	return ""
}

func (x *MuSigSignatureMessage) GetMsgBody() []byte {
	if x != nil {
		return x.MsgBody
	}
	return nil
}

func (x *MuSigSignatureMessage) GetMsgMeta() *MuSigMeta {
	if x != nil {
		return x.MsgMeta
	}
	return nil
}

func (x *MuSigSignatureMessage) GetSigners() [][]byte {
	if x != nil {
		return x.Signers
	}
	return nil
}

func (x *MuSigSignatureMessage) GetCommitment() []byte {
	if x != nil {
		return x.Commitment
	}
	return nil
}

func (x *MuSigSignatureMessage) GetSchnorrSignature() []byte {
	if x != nil {
		return x.SchnorrSignature
	}
	return nil
}

func (x *MuSigSignatureMessage) GetAppInfo() *AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type Greet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	PubKeyX   []byte   `protobuf:"bytes,2,opt,name=pubKeyX,proto3" json:"pubKeyX,omitempty"`
	PubKeyY   []byte   `protobuf:"bytes,3,opt,name=pubKeyY,proto3" json:"pubKeyY,omitempty"`
	WebURL    string   `protobuf:"bytes,4,opt,name=webURL,proto3" json:"webURL,omitempty"`
	AppInfo   *AppInfo `protobuf:"bytes,1000,opt,name=appInfo,proto3" json:"appInfo,omitempty"` // Application info.
}

func (x *Greet) Reset() {
	*x = Greet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Greet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Greet) ProtoMessage() {}

func (x *Greet) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Greet.ProtoReflect.Descriptor instead.
func (*Greet) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{13}
}

func (x *Greet) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Greet) GetPubKeyX() []byte {
	if x != nil {
		return x.PubKeyX
	}
	return nil
}

func (x *Greet) GetPubKeyY() []byte {
	if x != nil {
		return x.PubKeyY
	}
	return nil
}

func (x *Greet) GetWebURL() string {
	if x != nil {
		return x.WebURL
	}
	return ""
}

func (x *Greet) GetAppInfo() *AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type MuSigMetaTickV1_FeedTick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val []byte `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`  // Tick value (bn.DecFixedPoint).
	Age int64  `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"` // Unix timestamp.
	Vrs []byte `protobuf:"bytes,3,opt,name=vrs,proto3" json:"vrs,omitempty"`  // Feed signature (types.Signature).
}

func (x *MuSigMetaTickV1_FeedTick) Reset() {
	*x = MuSigMetaTickV1_FeedTick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuSigMetaTickV1_FeedTick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuSigMetaTickV1_FeedTick) ProtoMessage() {}

func (x *MuSigMetaTickV1_FeedTick) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuSigMetaTickV1_FeedTick.ProtoReflect.Descriptor instead.
func (*MuSigMetaTickV1_FeedTick) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{7, 0}
}

func (x *MuSigMetaTickV1_FeedTick) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

func (x *MuSigMetaTickV1_FeedTick) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *MuSigMetaTickV1_FeedTick) GetVrs() []byte {
	if x != nil {
		return x.Vrs
	}
	return nil
}

var File_transport_proto protoreflect.FileDescriptor

var file_transport_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x37, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x7f, 0x0a, 0x05, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x77, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x76, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x0e, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69,
	0x63, 0x6b, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5c, 0x0a, 0x12, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x32, 0x34, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x32, 0x34, 0x68, 0x22, 0xdd, 0x01, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x28, 0x0a, 0x09,
	0x73, 0x75, 0x62, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x1a, 0x37, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9f, 0x01, 0x0a, 0x10, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x63, 0x64, 0x73, 0x61, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x65, 0x63,
	0x64, 0x73, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x40, 0x0a, 0x09, 0x4d,
	0x75, 0x53, 0x69, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x05, 0x74, 0x69, 0x63, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x4d,
	0x65, 0x74, 0x61, 0x54, 0x69, 0x63, 0x6b, 0x56, 0x31, 0x48, 0x00, 0x52, 0x05, 0x74, 0x69, 0x63,
	0x6b, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x22, 0xeb, 0x01,
	0x0a, 0x0f, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x69, 0x63, 0x6b, 0x56,
	0x31, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x77, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x65, 0x63, 0x64, 0x73, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x65, 0x63,
	0x64, 0x73, 0x61, 0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x69,
	0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4d, 0x75, 0x53, 0x69,
	0x67, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x69, 0x63, 0x6b, 0x56, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x64,
	0x54, 0x69, 0x63, 0x6b, 0x52, 0x05, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x1a, 0x40, 0x0a, 0x08, 0x46,
	0x65, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x76, 0x72, 0x73, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x65, 0x63, 0x64, 0x73, 0x61, 0x44, 0x61, 0x74, 0x61, 0x22, 0x90, 0x02, 0x0a, 0x16,
	0x4d, 0x75, 0x53, 0x69, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x6d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x4d,
	0x65, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x75, 0x53, 0x69,
	0x67, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x61,
	0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x72,
	0x0a, 0x15, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0xdf, 0x01, 0x0a, 0x16, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x75,
	0x62, 0x4b, 0x65, 0x79, 0x58, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x59,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x59, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79,
	0x58, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x58, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x59, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x59, 0x12,
	0x23, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x1c, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x23, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xdd, 0x02, 0x0a, 0x15, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13,
	0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x42,
	0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x63, 0x68, 0x6e, 0x6f,
	0x72, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x10, 0x73, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xe8,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x73, 0x67,
	0x4d, 0x65, 0x74, 0x61, 0x22, 0x96, 0x01, 0x0a, 0x05, 0x47, 0x72, 0x65, 0x65, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x58, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x59, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x59,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x62, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x77, 0x65, 0x62, 0x55, 0x52, 0x4c, 0x12, 0x23, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x45, 0x5a,
	0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x72, 0x6f,
	0x6e, 0x69, 0x63, 0x6c, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x2d, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transport_proto_rawDescOnce sync.Once
	file_transport_proto_rawDescData = file_transport_proto_rawDesc
)

func file_transport_proto_rawDescGZIP() []byte {
	file_transport_proto_rawDescOnce.Do(func() {
		file_transport_proto_rawDescData = protoimpl.X.CompressGZIP(file_transport_proto_rawDescData)
	})
	return file_transport_proto_rawDescData
}

var file_transport_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_transport_proto_goTypes = []interface{}{
	(*AppInfo)(nil),                      // 0: AppInfo
	(*Price)(nil),                        // 1: Price
	(*DataPointValue)(nil),               // 2: DataPointValue
	(*DataPointTickValue)(nil),           // 3: DataPointTickValue
	(*DataPoint)(nil),                    // 4: DataPoint
	(*DataPointMessage)(nil),             // 5: DataPointMessage
	(*MuSigMeta)(nil),                    // 6: MuSigMeta
	(*MuSigMetaTickV1)(nil),              // 7: MuSigMetaTickV1
	(*MuSigInitializeMessage)(nil),       // 8: MuSigInitializeMessage
	(*MuSigTerminateMessage)(nil),        // 9: MuSigTerminateMessage
	(*MuSigCommitmentMessage)(nil),       // 10: MuSigCommitmentMessage
	(*MuSigPartialSignatureMessage)(nil), // 11: MuSigPartialSignatureMessage
	(*MuSigSignatureMessage)(nil),        // 12: MuSigSignatureMessage
	(*Greet)(nil),                        // 13: Greet
	nil,                                  // 14: DataPoint.MetaEntry
	(*MuSigMetaTickV1_FeedTick)(nil),     // 15: MuSigMetaTickV1.FeedTick
}
var file_transport_proto_depIdxs = []int32{
	3,  // 0: DataPointValue.tick:type_name -> DataPointTickValue
	2,  // 1: DataPoint.value:type_name -> DataPointValue
	4,  // 2: DataPoint.subPoints:type_name -> DataPoint
	14, // 3: DataPoint.meta:type_name -> DataPoint.MetaEntry
	4,  // 4: DataPointMessage.dataPoint:type_name -> DataPoint
	0,  // 5: DataPointMessage.appInfo:type_name -> AppInfo
	7,  // 6: MuSigMeta.ticks:type_name -> MuSigMetaTickV1
	15, // 7: MuSigMetaTickV1.ticks:type_name -> MuSigMetaTickV1.FeedTick
	6,  // 8: MuSigInitializeMessage.msgMeta:type_name -> MuSigMeta
	0,  // 9: MuSigInitializeMessage.appInfo:type_name -> AppInfo
	0,  // 10: MuSigTerminateMessage.appInfo:type_name -> AppInfo
	0,  // 11: MuSigCommitmentMessage.appInfo:type_name -> AppInfo
	0,  // 12: MuSigPartialSignatureMessage.appInfo:type_name -> AppInfo
	6,  // 13: MuSigSignatureMessage.msgMeta:type_name -> MuSigMeta
	0,  // 14: MuSigSignatureMessage.appInfo:type_name -> AppInfo
	0,  // 15: Greet.appInfo:type_name -> AppInfo
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_transport_proto_init() }
func file_transport_proto_init() {
	if File_transport_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transport_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPointValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPointTickValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPointMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigMetaTickV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigInitializeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigTerminateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigCommitmentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigPartialSignatureMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigSignatureMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Greet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuSigMetaTickV1_FeedTick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_transport_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*DataPointValue_Static)(nil),
		(*DataPointValue_Tick)(nil),
	}
	file_transport_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*MuSigMeta_Ticks)(nil),
	}
	file_transport_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_transport_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_transport_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transport_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transport_proto_goTypes,
		DependencyIndexes: file_transport_proto_depIdxs,
		MessageInfos:      file_transport_proto_msgTypes,
	}.Build()
	File_transport_proto = out.File
	file_transport_proto_rawDesc = nil
	file_transport_proto_goTypes = nil
	file_transport_proto_depIdxs = nil
}
