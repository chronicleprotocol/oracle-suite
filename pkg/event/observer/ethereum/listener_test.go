package ethereum

import (
	"encoding/hex"
	"math/big"
	"testing"

	"github.com/ethereum/go-ethereum/common"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_unpackWormholeGUID(t *testing.T) {
	data, _ := hex.DecodeString("111111111111111111111111111111111111111111111111111111111111111122222222222222222222222222222222222222222222222222222222222222220000000000000000000000003333333333333333333333333333333333333333000000000000000000000000444444444444444444444444444444444444444400000000000000000000000000000000000000000000000000000000000000370000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000004d")
	guid, err := unpackWormholeGUID(data)

	require.NoError(t, err)
	assert.Equal(t, common.HexToHash("0x1111111111111111111111111111111111111111111111111111111111111111"), guid.sourceDomain)
	assert.Equal(t, common.HexToHash("0x2222222222222222222222222222222222222222222222222222222222222222"), guid.targetDomain)
	assert.Equal(t, common.HexToAddress("0x3333333333333333333333333333333333333333"), guid.receiver)
	assert.Equal(t, common.HexToAddress("0x4444444444444444444444444444444444444444"), guid.operator)
	assert.Equal(t, big.NewInt(55), guid.amount)
	assert.Equal(t, big.NewInt(66), guid.nonce)
	assert.Equal(t, int64(77), guid.timestamp)
}
